{"version":3,"sources":["../src/IfFalse.js"],"names":["IfFalse","props","children","statement","condition","st","childrenIf","childrenElse","swap","child","type","name","push","length","React","Component","propTypes","PropTypes","bool"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,O;;;;;;;;;;;iCAGF;AACI,gBAAI,CAAC,KAAKC,KAAL,CAAWC,QAAhB,EAA0B;AACtB,uBAAO,IAAP;AACH;AACD,gBAAMC,YAAY,OAAO,KAAKF,KAAL,CAAWG,SAAlB,KAAgC,WAAhC,GAA8C,KAAKH,KAAL,CAAWG,SAAzD,GAAqE,KAAKH,KAAL,CAAWE,SAAX,IAAwB,KAAKF,KAAL,CAAWI,EAA1H;AACA,gBAAMC,aAAa,EAAnB;AACA,gBAAMC,eAAe,EAArB;AACA,gBAAIC,OAAO,KAAX;AAPJ;AAAA;AAAA;;AAAA;AAQI,qCAAoB,KAAKP,KAAL,CAAWC,QAA/B,8HAAyC;AAAA,wBAA9BO,KAA8B;;AACrC,wBAAIA,MAAMC,IAAN,CAAWC,IAAX,KAAoB,QAAxB,EAAkC;AAC9BH,+BAAO,IAAP;AACH,qBAFD,MAEO;AACH,4BAAIA,IAAJ,EAAU;AACND,yCAAaK,IAAb,CAAkBH,KAAlB;AACH,yBAFD,MAEO;AACHH,uCAAWM,IAAX,CAAgBH,KAAhB;AACH;AACJ;AACJ;AAlBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBI,gBAAI,CAAC,CAACN,SAAN,EAAiB;AACb,oBAAII,aAAaM,MAAb,GAAsB,CAA1B,EAA6B;AACzB,2BACI;AAAC,uCAAD,CAAO,QAAP;AAAA;AACMN;AADN,qBADJ;AAKH;AACD,uBAAO,IAAP;AACH;AACD,mBACI;AAAC,+BAAD,CAAO,QAAP;AAAA;AACMD;AADN,aADJ;AAKH;;;;EArCiBQ,gBAAMC,S;;AA0C5Bf,QAAQgB,SAAR,GAAoB;AAChBb,eAAWc,oBAAUC,IADL;AAEhBb,QAAIY,oBAAUC;AAFE,CAApB;;kBAKelB,O","file":"IfFalse.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport OrElse from './OrElse';\n\nclass IfFalse extends React.Component {\n\n    render()\n    {\n        if (!this.props.children) {\n            return null;\n        }\n        const statement = typeof this.props.condition !== 'undefined' ? this.props.condition : this.props.statement || this.props.st;\n        const childrenIf = [];\n        const childrenElse = [];\n        let swap = false;\n        for (const child of this.props.children) {\n            if (child.type.name === 'OrElse') {\n                swap = true;\n            } else {\n                if (swap) {\n                    childrenElse.push(child);\n                } else {\n                    childrenIf.push(child);\n                }\n            }\n        }\n        if (!!statement) {\n            if (childrenElse.length > 0) {\n                return (\n                    <React.Fragment>\n                        { childrenElse }\n                    </React.Fragment>\n                )\n            }\n            return null;\n        }\n        return (\n            <React.Fragment>\n                { childrenIf }\n            </React.Fragment>\n        )\n    }\n\n}\n\n\nIfFalse.propTypes = {\n    statement: PropTypes.bool,\n    st: PropTypes.bool\n};\n\nexport default IfFalse;\n"]}