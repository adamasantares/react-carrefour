{"version":3,"sources":["../src/CaseDefault.js"],"names":["CaseDefault","props","children","expression","values","hasMatch","val","Array","isArray","includes","React","Component","propTypes","PropTypes","array","oneOfType","string","number"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAGMA,W;;;;;;;;;;;iCAGF;AACI,gBAAI,CAAC,KAAKC,KAAL,CAAWC,QAAZ,IAAwB,CAAC,KAAKD,KAAL,CAAWE,UAApC,IAAkD,CAAC,KAAKF,KAAL,CAAWG,MAAlE,EAA0E;AACtE,uBAAO,IAAP;AACH;AACD,gBAAIC,WAAW,KAAf;AAJJ;AAAA;AAAA;;AAAA;AAKI,qCAAkB,KAAKJ,KAAL,CAAWG,MAA7B,8HAAqC;AAAA,wBAA1BE,GAA0B;;AACjC,wBAAIC,MAAMC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;AACpB,4BAAIA,IAAIG,QAAJ,CAAa,KAAKR,KAAL,CAAWE,UAAxB,CAAJ,EAAyC;AACrCE,uCAAW,IAAX,CAAiB;AACpB;AACJ,qBAJD,MAIO;AACH,4BAAI,KAAKJ,KAAL,CAAWE,UAAX,KAA0BG,GAA9B,EAAmC;AAC/BD,uCAAW,IAAX,CAAiB;AACpB;AACJ;AACJ;AAfL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBI,mBAAOA,WACH,IADG,GACK;AAAC,+BAAD,CAAO,QAAP;AAAA;AAAkB,qBAAKJ,KAAL,CAAWC;AAA7B,aADZ;AAEH;;;;EArBqBQ,gBAAMC,S;;AA0BhCX,YAAYY,SAAZ,GAAwB;AACpBR,YAAQS,oBAAUC,KADE;AAEpBX,gBAAYU,oBAAUE,SAAV,CAAoB,CAC5BF,oBAAUG,MADkB,EAE5BH,oBAAUI,MAFkB,CAApB;AAFQ,CAAxB;;kBAQejB,W","file":"CaseDefault.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass CaseDefault extends React.Component {\n\n    render()\n    {\n        if (!this.props.children || !this.props.expression || !this.props.values) {\n            return null;\n        }\n        let hasMatch = false;\n        for (const val of this.props.values) {\n            if (Array.isArray(val)) {\n                if (val.includes(this.props.expression)) {\n                    hasMatch = true; break;\n                }\n            } else {\n                if (this.props.expression === val) {\n                    hasMatch = true; break;\n                }\n            }\n        }\n        return hasMatch ?\n            null : (<React.Fragment>{ this.props.children }</React.Fragment>);\n    }\n\n}\n\n\nCaseDefault.propTypes = {\n    values: PropTypes.array,\n    expression: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n};\n\nexport default CaseDefault;\n"]}